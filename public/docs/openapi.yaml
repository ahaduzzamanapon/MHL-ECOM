openapi: 3.0.3
info:
  title: 'ShopKing - eCommerce App with Laravel Website & Admin Panel with POS | Inventory Management'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://shopking.test'
paths:
  /api/documentation:
    get:
      summary: 'Display Swagger API page.'
      operationId: displaySwaggerAPIPage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>L5 Swagger UI</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://shopking.test/docs/asset/swagger-ui.css?v=0755b7093afdd36d03212b65315f0209\">\n    <link rel=\"icon\" type=\"image/png\" href=\"http://shopking.test/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6\" sizes=\"32x32\"/>\n    <link rel=\"icon\" type=\"image/png\" href=\"http://shopking.test/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384\" sizes=\"16x16\"/>\n    <style>\n    html\n    {\n        box-sizing: border-box;\n        overflow: -moz-scrollbars-vertical;\n        overflow-y: scroll;\n    }\n    *,\n    *:before,\n    *:after\n    {\n        box-sizing: inherit;\n    }\n\n    body {\n      margin:0;\n      background: #fafafa;\n    }\n    </style>\n    </head>\n\n<body >\n<div id=\"swagger-ui\"></div>\n\n<script src=\"http://shopking.test/docs/asset/swagger-ui-bundle.js?v=6c23777357d2beae9650f9aa035d93fb\"></script>\n<script src=\"http://shopking.test/docs/asset/swagger-ui-standalone-preset.js?v=6b2892eb9458da5c3224817b3984d14c\"></script>\n<script>\n    window.onload = function() {\n        // Build a system\n        const ui = SwaggerUIBundle({\n            dom_id: '#swagger-ui',\n            url: \"http://shopking.test/docs/api-docs.json\",\n            operationsSorter: null,\n            configUrl: null,\n            validatorUrl: null,\n            oauth2RedirectUrl: \"http://shopking.test/api/oauth2-callback\",\n\n            requestInterceptor: function(request) {\n                request.headers['X-CSRF-TOKEN'] = '';\n                return request;\n            },\n\n            presets: [\n                SwaggerUIBundle.presets.apis,\n                SwaggerUIStandalonePreset\n            ],\n\n            plugins: [\n                SwaggerUIBundle.plugins.DownloadUrl\n            ],\n\n            layout: \"StandaloneLayout\",\n            docExpansion : \"none\",\n            deepLinking: true,\n            filter: true,\n            persistAuthorization: \"false\",\n\n        })\n\n        window.ui = ui\n\n            }\n</script>\n</body>\n</html>\n"
      tags:
        - Endpoints
      security: []
  /api/oauth2-callback:
    get:
      summary: 'Display Oauth2 callback pages.'
      operationId: displayOauth2CallbackPages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!doctype html>\n<html lang=\"en-US\">\n<head>\n    <title>Swagger UI: OAuth2 Redirect</title>\n</head>\n<body>\n<script>\n    'use strict';\n    function run () {\n        var oauth2 = window.opener.swaggerUIRedirectOauth2;\n        var sentState = oauth2.state;\n        var redirectUrl = oauth2.redirectUrl;\n        var isValid, qp, arr;\n\n        if (/code|token|error/.test(window.location.hash)) {\n            qp = window.location.hash.substring(1).replace('?', '&');\n        } else {\n            qp = location.search.substring(1);\n        }\n\n        arr = qp.split(\"&\");\n        arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\n        qp = qp ? JSON.parse('{' + arr.join() + '}',\n                function (key, value) {\n                    return key === \"\" ? value : decodeURIComponent(value);\n                }\n        ) : {};\n\n        isValid = qp.state === sentState;\n\n        if ((\n          oauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\n          oauth2.auth.schema.get(\"flow\") === \"authorization_code\"\n        ) && !oauth2.auth.code) {\n            if (!isValid) {\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"warning\",\n                    message: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\n                });\n            }\n\n            if (qp.code) {\n                delete oauth2.state;\n                oauth2.auth.code = qp.code;\n                oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n            } else {\n                let oauthErrorMsg;\n                if (qp.error) {\n                    oauthErrorMsg = \"[\"+qp.error+\"]: \" +\n                        (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n                        (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n                }\n\n                oauth2.errCb({\n                    authId: oauth2.auth.name,\n                    source: \"auth\",\n                    level: \"error\",\n                    message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\n                });\n            }\n        } else {\n            oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n        }\n        window.close();\n    }\n\n    if (document.readyState !== 'loading') {\n        run();\n    } else {\n        document.addEventListener('DOMContentLoaded', function () {\n            run();\n        });\n    }\n</script>\n</body>\n</html>\n"
      tags:
        - Endpoints
      security: []
  /api/login:
    get:
      summary: ''
      operationId: getApiLogin
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: unauthenticated
                properties:
                  errors:
                    type: string
                    example: unauthenticated
      tags:
        - Endpoints
      security: []
  /api/refresh-token:
    get:
      summary: ''
      operationId: getApiRefreshToken
      description: ''
      parameters: []
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: 'The token is invalid.'
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'The token is invalid.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: et
                  nullable: false
              required:
                - token
      security: []
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                country_code:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '7n#s/\AX\*R*bhHsrnTx'
                  nullable: false
              required:
                - password
      security: []
  /api/auth/forgot-password:
    post:
      summary: ''
      operationId: postApiAuthForgotPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                country_code:
                  type: string
                  description: ''
                  example: null
                  nullable: false
      security: []
  /api/auth/forgot-password/otp-phone:
    post:
      summary: ''
      operationId: postApiAuthForgotPasswordOtpPhone
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: iehibqgyajwzupsolctmzr
                  nullable: false
                country_code:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
              required:
                - phone
                - country_code
      security: []
  /api/auth/forgot-password/otp-email:
    post:
      summary: ''
      operationId: postApiAuthForgotPasswordOtpEmail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: oreilly.buster@example.org
                  nullable: false
              required:
                - email
      security: []
  /api/auth/forgot-password/verify-phone:
    post:
      summary: ''
      operationId: postApiAuthForgotPasswordVerifyPhone
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: r
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: yyzkvzmtj
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: vjcgwbjjtuqgacaiy
                  nullable: false
              required:
                - country_code
                - phone
                - token
      security: []
  /api/auth/forgot-password/verify-email:
    post:
      summary: ''
      operationId: postApiAuthForgotPasswordVerifyEmail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: pearl.tillman@example.net
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: ywlmqorrucvrycpqzfowhve
                  nullable: false
              required:
                - email
                - token
      security: []
  /api/auth/forgot-password/reset-password:
    post:
      summary: ''
      operationId: postApiAuthForgotPasswordResetPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                country_code:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: ',}\[FV7ESqP2('
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: uvwkphjnjmleyisomwokm
                  nullable: false
              required:
                - password
                - password_confirmation
      security: []
  /api/auth/signup/otp-phone:
    post:
      summary: ''
      operationId: postApiAuthSignupOtpPhone
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: jtvpyudstzjmg
                  nullable: false
                country_code:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
              required:
                - phone
                - country_code
      security: []
  /api/auth/signup/otp-email:
    post:
      summary: ''
      operationId: postApiAuthSignupOtpEmail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: glover.gracie@example.com
                  nullable: false
              required:
                - email
      security: []
  /api/auth/signup/verify-phone:
    post:
      summary: ''
      operationId: postApiAuthSignupVerifyPhone
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: zgejevlgn
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: phmjvgzl
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: ewmovtmnmduaezc
                  nullable: false
              required:
                - country_code
                - phone
                - token
      security: []
  /api/auth/signup/verify-email:
    post:
      summary: ''
      operationId: postApiAuthSignupVerifyEmail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: crist.jabari@example.net
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 180 characters.'
                  example: augrujgoshkhlayjfmdglu
                  nullable: false
              required:
                - email
                - token
      security: []
  /api/auth/signup/register:
    post:
      summary: ''
      operationId: postApiAuthSignupRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xvlaprehlhtruullqyx
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: raquel.jerde@example.org
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: etevbxtgn
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: gayjjwos
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'czWNE+J:S3C;H+Vv'
                  nullable: false
              required:
                - name
                - email
                - phone
                - country_code
                - password
      security: []
  /api/auth/signup/login-verify:
    post:
      summary: ''
      operationId: postApiAuthSignupLoginVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/signup/register-validation:
    post:
      summary: ''
      operationId: postApiAuthSignupRegisterValidation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xurlwnmpxvmzcjduzptb
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: dkuphal@example.com
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: hhcvqehpirjoravqvu
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 10 characters.'
                  example: ykanbk
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '5$B(vp$r#CpaJI^+'
                  nullable: false
              required:
                - name
                - email
                - phone
                - country_code
                - password
      security: []
  /api/auth/logout:
    post:
      summary: ''
      operationId: postApiAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/delete-account:
    post:
      summary: ''
      operationId: postApiAuthDeleteAccount
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/auth/authcheck:
    post:
      summary: ''
      operationId: postApiAuthAuthcheck
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/profile:
    get:
      summary: ''
      operationId: getApiProfile
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/profile/change-password:
    put:
      summary: ''
      operationId: putApiProfileChangePassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: xvzurreigwosotklzpoqybmemtcwssxshocoljrtpryirmelnmhwjycsogpnwpmzvevhgvygjfllkvkykuvigbh
                  nullable: false
                new_password:
                  type: string
                  description: 'This field is required when <code>confirm_password</code> is present.  The value and <code>confirm_password</code> must match. Must be at least 6 characters.'
                  example: vtsvwtwjqfzypdhusmlzhlim
                  nullable: false
                confirm_password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: gayzjxyhzcttncsqkwtsjppoujendsbpqxzimenakt
                  nullable: false
              required:
                - old_password
                - new_password
                - confirm_password
      security: []
  /api/profile/change-image:
    post:
      summary: ''
      operationId: postApiProfileChangeImage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
  /api/admin/timezone:
    get:
      summary: ''
      operationId: getApiAdminTimezone
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/total-sales:
    get:
      summary: ''
      operationId: getApiAdminDashboardTotalSales
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/total-orders:
    get:
      summary: ''
      operationId: getApiAdminDashboardTotalOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/total-customers:
    get:
      summary: ''
      operationId: getApiAdminDashboardTotalCustomers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/total-products:
    get:
      summary: ''
      operationId: getApiAdminDashboardTotalProducts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/order-statistics:
    get:
      summary: ''
      operationId: getApiAdminDashboardOrderStatistics
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/sales-summary:
    get:
      summary: ''
      operationId: getApiAdminDashboardSalesSummary
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/order-summary:
    get:
      summary: ''
      operationId: getApiAdminDashboardOrderSummary
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/customer-states:
    get:
      summary: ''
      operationId: getApiAdminDashboardCustomerStates
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/top-customers:
    get:
      summary: ''
      operationId: getApiAdminDashboardTopCustomers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/dashboard/top-products:
    get:
      summary: ''
      operationId: getApiAdminDashboardTopProducts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/setting/company:
    get:
      summary: ''
      operationId: getApiAdminSettingCompany
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingCompany
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                company_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: zdkwftste
                  nullable: false
                company_email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: carmela44@example.com
                  nullable: false
                company_calling_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ckgzxmwtnpbuaipwue
                  nullable: false
                company_phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: qypibeiyuplaxvu
                  nullable: false
                company_website:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 500 characters.'
                  example: yjfdxexmdhnjfbeznse
                  nullable: true
                company_city:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: wlcfwlerbjgvfnecaqlbm
                  nullable: false
                company_state:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: fbmhhdlinocuoyc
                  nullable: false
                company_country_code:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: p
                  nullable: false
                company_zip_code:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: eaolsrv
                  nullable: false
                company_latitude:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: lhjknpcyvzk
                  nullable: true
                company_longitude:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: exkkgqhjqfeyozikka
                  nullable: true
                company_address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: egthbbxgrqwqhshcesblgbx
                  nullable: false
              required:
                - company_name
                - company_email
                - company_calling_code
                - company_phone
                - company_city
                - company_state
                - company_country_code
                - company_zip_code
                - company_address
      security: []
  /api/admin/setting/site:
    get:
      summary: ''
      operationId: getApiAdminSettingSite
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingSite
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                site_date_format:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: cbdlzqqpejtdbbypytri
                  nullable: false
                site_time_format:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: gfuxfi
                  nullable: false
                site_default_timezone:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: Europe/Samara
                  nullable: false
                site_default_currency:
                  type: number
                  description: ''
                  example: 41009.9
                  nullable: false
                site_currency_position:
                  type: number
                  description: ''
                  example: 524503.4937
                  nullable: false
                site_digit_after_decimal_point:
                  type: number
                  description: 'Must not be greater than 6.'
                  example: 5
                  nullable: false
                site_email_verification:
                  type: number
                  description: ''
                  example: 190751.51
                  nullable: false
                site_phone_verification:
                  type: number
                  description: ''
                  example: 170.870903
                  nullable: false
                site_default_language:
                  type: number
                  description: ''
                  example: 4.802182
                  nullable: false
                site_language_switch:
                  type: number
                  description: ''
                  example: 134927558.42
                  nullable: false
                site_app_debug:
                  type: number
                  description: ''
                  example: 187298141.0
                  nullable: false
                site_auto_update:
                  type: number
                  description: ''
                  example: 32371.809214609
                  nullable: false
                site_android_app_link:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: udbw
                  nullable: true
                site_ios_app_link:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: nwmmsfuu
                  nullable: true
                site_copyright:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: kpwcrwjnvzeogacigs
                  nullable: false
                site_online_payment_gateway:
                  type: number
                  description: ''
                  example: 24069.9
                  nullable: false
                site_default_sms_gateway:
                  type: number
                  description: ''
                  example: 383329.17386228
                  nullable: true
                site_cash_on_delivery:
                  type: number
                  description: ''
                  example: 17047376.04
                  nullable: false
                site_non_purchase_product_maximum_quantity:
                  type: number
                  description: ''
                  example: 0.4
                  nullable: false
                site_is_return_product_price_add_to_credit:
                  type: number
                  description: ''
                  example: 30743.01
                  nullable: false
              required:
                - site_date_format
                - site_time_format
                - site_default_timezone
                - site_default_currency
                - site_currency_position
                - site_digit_after_decimal_point
                - site_email_verification
                - site_phone_verification
                - site_default_language
                - site_language_switch
                - site_app_debug
                - site_auto_update
                - site_copyright
                - site_online_payment_gateway
                - site_cash_on_delivery
                - site_non_purchase_product_maximum_quantity
                - site_is_return_product_price_add_to_credit
      security: []
  /api/admin/setting/theme:
    get:
      summary: ''
      operationId: getApiAdminSettingTheme
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingTheme
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                theme_logo:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                theme_favicon_logo:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                theme_footer_logo:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
      security: []
  /api/admin/setting/analytic:
    get:
      summary: ''
      operationId: getApiAdminSettingAnalytic
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 21
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingAnalytic
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: tidjzcb
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 0.8722697
                  nullable: false
              required:
                - name
                - status
      security: []
  '/api/admin/setting/analytic/show/{analytic_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingAnalyticShowAnalytic_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: analytic_id
        description: 'The ID of the analytic.'
        example: 18
        required: true
        schema:
          type: integer
  '/api/admin/setting/analytic/{analytic_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingAnalyticAnalytic_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: bh
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 361006576.6
                  nullable: false
              required:
                - name
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingAnalyticAnalytic_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: analytic_id
        description: 'The ID of the analytic.'
        example: 12
        required: true
        schema:
          type: integer
  '/api/admin/setting/analytic-section/{analytic_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingAnalyticSectionAnalytic_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingAnalyticSectionAnalytic_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: tmdartvqukpcvc
                  nullable: false
                section:
                  type: number
                  description: ''
                  example: 2.55661
                  nullable: false
                data:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: lsdwta
                  nullable: false
              required:
                - name
                - section
                - data
      security: []
    parameters:
      -
        in: path
        name: analytic_id
        description: 'The ID of the analytic.'
        example: 8
        required: true
        schema:
          type: integer
  '/api/admin/setting/analytic-section/{analytic_id}/{analyticSection_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingAnalyticSectionAnalytic_idAnalyticSection_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: ispnmxtparouhyi
                  nullable: false
                section:
                  type: number
                  description: ''
                  example: 5815394.512
                  nullable: false
                data:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: spvluupmwrl
                  nullable: false
              required:
                - name
                - section
                - data
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingAnalyticSectionAnalytic_idAnalyticSection_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: analytic_id
        description: 'The ID of the analytic.'
        example: 7
        required: true
        schema:
          type: integer
      -
        in: path
        name: analyticSection_id
        description: 'The ID of the analyticSection.'
        example: 9
        required: true
        schema:
          type: integer
  /api/admin/setting/mail:
    get:
      summary: ''
      operationId: getApiAdminSettingMail
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingMail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail_host:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: vzkcexjihlfawcmqegkem
                  nullable: false
                mail_port:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: vnieozsi
                  nullable: false
                mail_username:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: nwvmdneybbeppsdwtlvdhllxz
                  nullable: false
                mail_password:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: mpgjxpctsbshfgfsdmqec
                  nullable: false
                mail_encryption:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: wvsndyuwkhsjndrbxr
                  nullable: false
                mail_from_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: kiyjzmkzfskebayusd
                  nullable: false
                mail_from_email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: lambert20@example.org
                  nullable: false
              required:
                - mail_host
                - mail_port
                - mail_username
                - mail_password
                - mail_encryption
                - mail_from_name
                - mail_from_email
      security: []
  /api/admin/setting/shipping-setup:
    get:
      summary: ''
      operationId: getApiAdminSettingShippingSetup
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingShippingSetup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_setup_method:
                  type: number
                  description: ''
                  example: 703.816
                  nullable: false
                shipping_setup_flat_rate_wise_cost:
                  type: number
                  description: ''
                  example: 11315628.8
                  nullable: true
                shipping_setup_area_wise_default_cost:
                  type: number
                  description: ''
                  example: 1.0
                  nullable: true
              required:
                - shipping_setup_method
      security: []
  /api/admin/setting/order-area:
    get:
      summary: ''
      operationId: getApiAdminSettingOrderArea
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 5
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingOrderArea
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: wmvqpabwkkfmiowwyqc
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: jifpxulqdntozlmwlwipkf
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: ksnepxevwjkcpbrse
                  nullable: true
                shipping_cost:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: qwvc
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 22
                  nullable: false
              required:
                - country
                - shipping_cost
                - status
      security: []
  '/api/admin/setting/order-area/{orderArea_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingOrderAreaOrderArea_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: gthiihykijpacyvcdcppf
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: yhbzokj
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: gvzrlzmlokqvswpcauhhu
                  nullable: true
                shipping_cost:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: owddke
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 24
                  nullable: false
              required:
                - country
                - shipping_cost
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingOrderAreaOrderArea_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: orderArea_id
        description: 'The ID of the orderArea.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/currency:
    get:
      summary: ''
      operationId: getApiAdminSettingCurrency
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingCurrency
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: hiqiurkluzzsj
                  nullable: false
                symbol:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: vayxjxnmogleakbzrzqpart
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: agzifavbqfzjgprzm
                  nullable: false
                is_cryptocurrency:
                  type: number
                  description: 'Must not be greater than 15.'
                  example: 11
                  nullable: false
                exchange_rate:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 9999999999999.'
                  example: 13
                  nullable: true
              required:
                - name
                - symbol
                - code
                - is_cryptocurrency
      security: []
  '/api/admin/setting/currency/show/{currency_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingCurrencyShowCurrency_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: currency_id
        description: 'The ID of the currency.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/currency/{currency_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingCurrencyCurrency_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ghkkvgbubozewefa
                  nullable: false
                symbol:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: qczlbw
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ofgzwnlvzargvnpxelh
                  nullable: false
                is_cryptocurrency:
                  type: number
                  description: 'Must not be greater than 15.'
                  example: 15
                  nullable: false
                exchange_rate:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 9999999999999.'
                  example: 11
                  nullable: true
              required:
                - name
                - symbol
                - code
                - is_cryptocurrency
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingCurrencyCurrency_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: currency_id
        description: 'The ID of the currency.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/tax:
    get:
      summary: ''
      operationId: getApiAdminSettingTax
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 3
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingTax
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ppkbuyyqb
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: qoxzfgl
                  nullable: false
                tax_rate:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 100.'
                  example: 21
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 1.619782216
                  nullable: false
              required:
                - name
                - code
                - tax_rate
                - status
      security: []
  '/api/admin/setting/tax/show/{tax_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingTaxShowTax_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tax_id
        description: 'The ID of the tax.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/tax/{tax_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingTaxTax_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: xfgwtladrmlqnhmhy
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: du
                  nullable: false
                tax_rate:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 100.'
                  example: 15
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 3484045.462
                  nullable: false
              required:
                - name
                - code
                - tax_rate
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingTaxTax_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: tax_id
        description: 'The ID of the tax.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/product-category:
    get:
      summary: ''
      operationId: getApiAdminSettingProductCategory
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingProductCategory
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: l
                  nullable: false
                parent_id:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: ninsxye
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Aspernatur ratione enim quasi itaque iusto rerum unde asperiores.'
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 12
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - name
                - status
      security: []
  /api/admin/setting/product-category/depth-tree:
    get:
      summary: ''
      operationId: getApiAdminSettingProductCategoryDepthTree
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/setting/product-category/show/{productCategory_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingProductCategoryShowProductCategory_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productCategory_id
        description: 'The ID of the productCategory.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-category/{productCategory_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingProductCategoryProductCategory_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: rvblslj
                  nullable: false
                parent_id:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: tnblftkzdn
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Dolor sequi veritatis modi qui natus voluptates repellat deserunt.'
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 17
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - name
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingProductCategoryProductCategory_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productCategory_id
        description: 'The ID of the productCategory.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-category/ancestors-and-self/{productCategory_slug}':
    get:
      summary: ''
      operationId: getApiAdminSettingProductCategoryAncestorsAndSelfProductCategory_slug
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productCategory_slug
        description: 'The slug of the productCategory.'
        example: enim
        required: true
        schema:
          type: string
  /api/admin/setting/product-category/tree:
    get:
      summary: ''
      operationId: getApiAdminSettingProductCategoryTree
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/setting/product-brand:
    get:
      summary: ''
      operationId: getApiAdminSettingProductBrand
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 1
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingProductBrand
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ovjmuayfeqzupz
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Voluptas neque dolorem atque qui quod.'
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 4
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - name
                - status
      security: []
  '/api/admin/setting/product-brand/show/{productBrand_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingProductBrandShowProductBrand_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productBrand_id
        description: 'The ID of the productBrand.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-brand/{productBrand_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingProductBrandProductBrand_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: dqcrfcmizzebwf
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Est iste ex sint vel et molestias ut.'
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 17
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - name
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingProductBrandProductBrand_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productBrand_id
        description: 'The ID of the productBrand.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/supplier:
    get:
      summary: ''
      operationId: getApiAdminSettingSupplier
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 23
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingSupplier
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: zidcwbxyp
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: odktlkbw
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: xconnelly@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: um
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: aiwoomfkctmiuprblud
                  nullable: true
                country:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: hyhtsushofpbeubrzvxturcie
                  nullable: true
                state:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: u
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: u
                  nullable: true
                zip_code:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: ccvfhodhkfdmugpx
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: uje
                  nullable: true
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - company
                - name
      security: []
  '/api/admin/setting/supplier/show/{supplier_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingSupplierShowSupplier_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: supplier_id
        description: 'The ID of the supplier.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/supplier/{supplier_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingSupplierSupplier_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ohptr
                  nullable: false
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: zrfs
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: zaria44@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: oevee
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: aumxulwhneysliugejsbaaq
                  nullable: true
                country:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: wscadonkhkciobrro
                  nullable: true
                state:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: c
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: fbfketobjgwqwuhwgbrgmds
                  nullable: true
                zip_code:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: wicgxmggmeqpgobluwmfx
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: iwwwcmsivjtqk
                  nullable: true
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - company
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingSupplierSupplier_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: supplier_id
        description: 'The ID of the supplier.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/otp:
    get:
      summary: ''
      operationId: getApiAdminSettingOtp
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp_type:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: false
                otp_digit_limit:
                  type: number
                  description: ''
                  example: 181480001.299
                  nullable: false
                otp_expire_time:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 60.'
                  example: 11
                  nullable: false
              required:
                - otp_type
                - otp_digit_limit
                - otp_expire_time
      security: []
  /api/admin/setting/social-media:
    get:
      summary: ''
      operationId: getApiAdminSettingSocialMedia
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingSocialMedia
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                social_media_facebook:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 190 characters.'
                  example: kzm
                  nullable: true
                social_media_youtube:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 190 characters.'
                  example: eyhswqeosuayc
                  nullable: true
                social_media_instagram:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 190 characters.'
                  example: nxlwoamlnecbsooxh
                  nullable: true
                social_media_twitter:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 190 characters.'
                  example: qqgxsamkbdkceuzqy
                  nullable: true
      security: []
  /api/admin/setting/sms-gateway:
    get:
      summary: ''
      operationId: getApiAdminSettingSmsGateway
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingSmsGateway
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin/setting/slider:
    get:
      summary: ''
      operationId: getApiAdminSettingSlider
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingSlider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: s
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                status:
                  type: number
                  description: ''
                  example: 242174648.61799
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - title
                - status
                - image
      security: []
  '/api/admin/setting/slider/show/{slider_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingSliderShowSlider_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slider_id
        description: 'The ID of the slider.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/slider/{slider_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingSliderSlider_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: tdvqbccqqssibivmic
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                status:
                  type: number
                  description: ''
                  example: 238164740.0
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - title
                - status
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingSliderSlider_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: slider_id
        description: 'The ID of the slider.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/language:
    get:
      summary: ''
      operationId: getApiAdminSettingLanguage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 17
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingLanguage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: pxjpepezvoaecxnxar
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: bitxwfzjntalatyw
                  nullable: false
                display_mode:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 23
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 15
                  nullable: false
              required:
                - name
                - code
                - display_mode
                - status
      security: []
  '/api/admin/setting/language/show/{language_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingLanguageShowLanguage_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: language_id
        description: 'The ID of the language.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/language/update/{language_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingLanguageUpdateLanguage_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: unkjw
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: covlggcbwaghdme
                  nullable: false
                display_mode:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 19
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 18
                  nullable: false
              required:
                - name
                - code
                - display_mode
                - status
      security: []
    parameters:
      -
        in: path
        name: language_id
        description: 'The ID of the language.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/language/{language_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminSettingLanguageLanguage_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: language_id
        description: 'The ID of the language.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/language/file-list/{language_code}':
    get:
      summary: ''
      operationId: getApiAdminSettingLanguageFileListLanguage_code
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: language_code
        description: ''
        example: quia
        required: true
        schema:
          type: string
  /api/admin/setting/language/file-text:
    post:
      summary: ''
      operationId: postApiAdminSettingLanguageFileText
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                path:
                  type: string
                  description: ''
                  example: et
                  nullable: false
              required:
                - name
                - path
      security: []
  /api/admin/setting/language/file-text/store:
    post:
      summary: ''
      operationId: postApiAdminSettingLanguageFileTextStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin/setting/cookies:
    get:
      summary: ''
      operationId: getApiAdminSettingCookies
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingCookies
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cookies_details_page_id:
                  type: number
                  description: ''
                  example: 2072340.0442
                  nullable: false
                cookies_summary:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
              required:
                - cookies_details_page_id
                - cookies_summary
      security: []
  /api/admin/setting/page:
    get:
      summary: ''
      operationId: getApiAdminSettingPage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 7
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingPage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: gafzfkjhlbikovelbwg
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Atque et cum et.'
                  nullable: false
                menu_section_id:
                  type: number
                  description: ''
                  example: 8381.8177
                  nullable: false
                menu_template_id:
                  type: number
                  description: ''
                  example: 1890229.0
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 1
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - title
                - description
                - menu_section_id
                - status
      security: []
  '/api/admin/setting/page/show/{page_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingPageShowPage_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: page_id
        description: 'The ID of the page.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/page/{page_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingPagePage_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: dclutpx
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Et et voluptas molestiae architecto iste rem.'
                  nullable: false
                menu_section_id:
                  type: number
                  description: ''
                  example: 0.28683
                  nullable: false
                menu_template_id:
                  type: number
                  description: ''
                  example: 4052.0
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 23
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - title
                - description
                - menu_section_id
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingPagePage_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: page_id
        description: 'The ID of the page.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/license:
    get:
      summary: ''
      operationId: getApiAdminSettingLicense
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingLicense
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                license_key:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: ovixntqacvnno
                  nullable: false
              required:
                - license_key
      security: []
  /api/admin/setting/menu-section:
    get:
      summary: ''
      operationId: getApiAdminSettingMenuSection
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
  /api/admin/setting/menu-template:
    get:
      summary: ''
      operationId: getApiAdminSettingMenuTemplate
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 24
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingMenuTemplate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: psfrotndnhxmzxnlsfp
                  nullable: false
              required:
                - name
      security: []
  '/api/admin/setting/menu-template/show/{menuTemplate_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingMenuTemplateShowMenuTemplate_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: menuTemplate_id
        description: 'The ID of the menuTemplate.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/menu-template/{menuTemplate_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingMenuTemplateMenuTemplate_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: txqff
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingMenuTemplateMenuTemplate_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: menuTemplate_id
        description: 'The ID of the menuTemplate.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/product-attribute:
    get:
      summary: ''
      operationId: getApiAdminSettingProductAttribute
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingProductAttribute
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: rgfmuqkykrgodd
                  nullable: false
              required:
                - name
      security: []
  '/api/admin/setting/product-attribute/show/{productAttribute_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingProductAttributeShowProductAttribute_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-attribute/{productAttribute_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingProductAttributeProductAttribute_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: bwkeqxunqdnnkziefeszol
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingProductAttributeProductAttribute_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-attribute-option/{productAttribute_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingProductAttributeOptionProductAttribute_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 3
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingProductAttributeOptionProductAttribute_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: qqoghdpxfvbvpzomtjkgdbf
                  nullable: false
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-attribute-option/{productAttribute_id}/show/{productAttributeOption_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingProductAttributeOptionProductAttribute_idShowProductAttributeOption_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productAttributeOption_id
        description: 'The ID of the productAttributeOption.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/product-attribute-option/{productAttribute_id}/{productAttributeOption_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingProductAttributeOptionProductAttribute_idProductAttributeOption_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: xnaivzqyawtlqbkevckqrl
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingProductAttributeOptionProductAttribute_idProductAttributeOption_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productAttribute_id
        description: 'The ID of the productAttribute.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productAttributeOption_id
        description: 'The ID of the productAttributeOption.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/unit:
    get:
      summary: ''
      operationId: getApiAdminSettingUnit
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 10
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingUnit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: xxwcxhexv
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: pqilxdm
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 155.25248897
                  nullable: false
              required:
                - name
                - code
                - status
      security: []
  '/api/admin/setting/unit/show/{unit_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingUnitShowUnit_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: unit_id
        description: 'The ID of the unit.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/unit/{unit_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingUnitUnit_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: tbztanzajeokglviept
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: wdetlctunhvkwamvkq
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 13939.372
                  nullable: false
              required:
                - name
                - code
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingUnitUnit_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: unit_id
        description: 'The ID of the unit.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/barcode:
    get:
      summary: ''
      operationId: getApiAdminSettingBarcode
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 20
                  nullable: false
      security: []
  /api/admin/setting/payment-gateway:
    get:
      summary: ''
      operationId: getApiAdminSettingPaymentGateway
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 8
                  nullable: false
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingPaymentGateway
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin/setting/notification:
    get:
      summary: ''
      operationId: getApiAdminSettingNotification
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                notification_fcm_public_vapid_key:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: itspiet
                  nullable: false
                notification_fcm_api_key:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: paotkjtuj
                  nullable: false
                notification_fcm_auth_domain:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: tvelnyytzqbrbidgkssp
                  nullable: false
                notification_fcm_project_id:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: yq
                  nullable: false
                notification_fcm_storage_bucket:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: pctlnjz
                  nullable: false
                notification_fcm_messaging_sender_id:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: okcrv
                  nullable: false
                notification_fcm_app_id:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: kaolklngwpysmrybgklhjyyvv
                  nullable: false
                notification_fcm_measurement_id:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: fvrkepyfzzngzvgr
                  nullable: false
                notification_fcm_json_file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - notification_fcm_public_vapid_key
                - notification_fcm_api_key
                - notification_fcm_auth_domain
                - notification_fcm_project_id
                - notification_fcm_storage_bucket
                - notification_fcm_messaging_sender_id
                - notification_fcm_app_id
                - notification_fcm_measurement_id
      security: []
  /api/admin/setting/role:
    get:
      summary: ''
      operationId: getApiAdminSettingRole
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 16
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingRole
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: wrwvmjmxd
                  nullable: false
              required:
                - name
      security: []
  '/api/admin/setting/role/show/{role_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingRoleShowRole_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/role/{role_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingRoleRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: nl
                  nullable: false
              required:
                - name
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingRoleRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/permission/{role_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingPermissionRole_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingPermissionRole_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
      security: []
    parameters:
      -
        in: path
        name: role_id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/benefit:
    get:
      summary: ''
      operationId: getApiAdminSettingBenefit
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 6
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingBenefit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ut
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Rerum molestiae laborum vel.'
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 17
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - title
                - description
                - status
                - image
      security: []
  '/api/admin/setting/benefit/show/{benefit_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingBenefitShowBenefit_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: benefit_id
        description: 'The ID of the benefit.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/benefit/{benefit_id}':
    post:
      summary: ''
      operationId: postApiAdminSettingBenefitBenefit_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: mbpdqdudydfhneikov
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Rerum quis illum quisquam iure.'
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 3
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - title
                - description
                - status
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingBenefitBenefit_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: benefit_id
        description: 'The ID of the benefit.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/notification-alert:
    get:
      summary: ''
      operationId: getApiAdminSettingNotificationAlert
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminSettingNotificationAlert
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin/setting/return-reason:
    get:
      summary: ''
      operationId: getApiAdminSettingReturnReason
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 21
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingReturnReason
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 250 characters.'
                  example: rfrvoapwcevylsxcba
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 2149.41
                  nullable: false
                details:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: fijkibojovpimybvrakcx
                  nullable: true
              required:
                - title
                - status
      security: []
  '/api/admin/setting/return-reason/show/{returnReason_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingReturnReasonShowReturnReason_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnReason_id
        description: 'The ID of the returnReason.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/return-reason/{returnReason_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingReturnReasonReturnReason_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 250 characters.'
                  example: wlkgtrojbqr
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 4.12448254
                  nullable: false
                details:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: usacppfcw
                  nullable: true
              required:
                - title
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingReturnReasonReturnReason_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnReason_id
        description: 'The ID of the returnReason.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/setting/outlet:
    get:
      summary: ''
      operationId: getApiAdminSettingOutlet
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 23
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminSettingOutlet
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: mpzajzcltsgnfskscpjhxofio
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: delphia.bradtke@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: yzezsspmtzhihypisomm
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: hnlyqccfejerbykh
                  nullable: true
                latitude:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: xhh
                  nullable: true
                longitude:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: hgycdgamouquhhza
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: jwpl
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: agvlgnuxjxpdqmwhpnyekk
                  nullable: false
                zip_code:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: ovscgfpmn
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 6
                  nullable: false
              required:
                - name
                - city
                - state
                - zip_code
                - address
                - status
      security: []
  '/api/admin/setting/outlet/show/{outlet_id}':
    get:
      summary: ''
      operationId: getApiAdminSettingOutletShowOutlet_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: outlet_id
        description: 'The ID of the outlet.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/setting/outlet/{outlet_id}':
    put:
      summary: ''
      operationId: putApiAdminSettingOutletOutlet_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: pjdqjvmcaj
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: qvandervort@example.net
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: lqnvlysgihhzcl
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: nlgcdlwzotkohhjxjg
                  nullable: true
                latitude:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: nla
                  nullable: true
                longitude:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: strhiofqdftnrzcpffy
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: phjakufjd
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: sdrhzxcb
                  nullable: false
                zip_code:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: apyvhghyan
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 16
                  nullable: false
              required:
                - name
                - city
                - state
                - zip_code
                - address
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminSettingOutletOutlet_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: outlet_id
        description: 'The ID of the outlet.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product:
    get:
      summary: ''
      operationId: getApiAdminProduct
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminProduct
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: pxvekwqgnxrzhaj
                  nullable: false
                sku:
                  type: number
                  description: ''
                  example: 547.99
                  nullable: false
                product_category_id:
                  type: number
                  description: 'Must not be one of <code>0</code>.'
                  example: 1.3970676
                  nullable: false
                barcode_id:
                  type: number
                  description: 'Must not be one of <code>0</code>.'
                  example: 177796470.7105
                  nullable: false
                buying_price:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: false
                selling_price:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: false
                'tax_id[]':
                  type: number
                  description: ''
                  example: 3021.0
                  nullable: true
                product_brand_id:
                  type: number
                  description: ''
                  example: 229.65488
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 21
                  nullable: false
                can_purchasable:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 9
                  nullable: false
                show_stock_out:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 18
                  nullable: false
                refundable:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 1
                  nullable: false
                maximum_purchase_quantity:
                  type: number
                  description: ''
                  example: 1286410.926
                  nullable: false
                low_stock_quantity_warning:
                  type: number
                  description: ''
                  example: 646.89540505
                  nullable: false
                unit_id:
                  type: number
                  description: 'Must not be one of <code>0</code>.'
                  example: 520.07181238
                  nullable: false
                weight:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: zt
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Ut a dolor tenetur tempora et omnis quia.'
                  nullable: true
                tags:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["laborum","unde"]'
                  nullable: true
              required:
                - name
                - sku
                - product_category_id
                - barcode_id
                - buying_price
                - selling_price
                - status
                - can_purchasable
                - show_stock_out
                - refundable
                - maximum_purchase_quantity
                - low_stock_quantity_warning
                - unit_id
      security: []
  '/api/admin/product/show/{product_id}':
    get:
      summary: ''
      operationId: getApiAdminProductShowProduct_id
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/pos-product/{product_id}':
    get:
      summary: ''
      operationId: getApiAdminProductPosProductProduct_id
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/{product_id}':
    post:
      summary: ''
      operationId: postApiAdminProductProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: uvbnd
                  nullable: false
                sku:
                  type: number
                  description: ''
                  example: 8074.854593
                  nullable: false
                product_category_id:
                  type: number
                  description: 'Must not be one of <code>0</code>.'
                  example: 9269.723091842
                  nullable: false
                barcode_id:
                  type: number
                  description: 'Must not be one of <code>0</code>.'
                  example: 475372.515315
                  nullable: false
                buying_price:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                selling_price:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
                'tax_id[]':
                  type: number
                  description: ''
                  example: 138.34461
                  nullable: true
                product_brand_id:
                  type: number
                  description: ''
                  example: 1870641.9652561
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 12
                  nullable: false
                can_purchasable:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 3
                  nullable: false
                show_stock_out:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 6
                  nullable: false
                refundable:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 15
                  nullable: false
                maximum_purchase_quantity:
                  type: number
                  description: ''
                  example: 156608.15965554
                  nullable: false
                low_stock_quantity_warning:
                  type: number
                  description: ''
                  example: 148464530.39
                  nullable: false
                unit_id:
                  type: number
                  description: 'Must not be one of <code>0</code>.'
                  example: 17710.61
                  nullable: false
                weight:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: znxlfoy
                  nullable: true
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Nostrum minima cumque delectus.'
                  nullable: true
                tags:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["saepe","dolores"]'
                  nullable: true
              required:
                - name
                - sku
                - product_category_id
                - barcode_id
                - buying_price
                - selling_price
                - status
                - can_purchasable
                - show_stock_out
                - refundable
                - maximum_purchase_quantity
                - low_stock_quantity_warning
                - unit_id
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminProductProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/upload-image/{product_id}':
    post:
      summary: ''
      operationId: postApiAdminProductUploadImageProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/delete-image/{product_id}/{index}':
    get:
      summary: ''
      operationId: getApiAdminProductDeleteImageProduct_idIndex
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: index
        description: ''
        example: quos
        required: true
        schema:
          type: string
  /api/admin/product/export:
    get:
      summary: ''
      operationId: getApiAdminProductExport
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 14
                  nullable: false
      security: []
  /api/admin/product/generate-sku:
    get:
      summary: ''
      operationId: getApiAdminProductGenerateSku
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/admin/product/shipping-and-return/{product_id}':
    post:
      summary: ''
      operationId: postApiAdminProductShippingAndReturnProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_type:
                  type: number
                  description: ''
                  example: 365.1077528
                  nullable: false
                shipping_cost:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                is_product_quantity_multiply:
                  type: number
                  description: ''
                  example: 118417.30041
                  nullable: true
                shipping_and_return:
                  type: string
                  description: 'Must not be greater than 8000 characters.'
                  example: zzlkpfxgkkqt
                  nullable: true
              required:
                - shipping_type
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/offer/{product_id}':
    post:
      summary: ''
      operationId: postApiAdminProductOfferProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                add_to_flash_sale:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 7
                  nullable: false
                discount:
                  type: number
                  description: 'Must not be greater than 100.'
                  example: 16
                  nullable: false
                offer_start_date:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ljnebxzx
                  nullable: false
                offer_end_date:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: iakeraru
                  nullable: false
              required:
                - add_to_flash_sale
                - discount
                - offer_start_date
                - offer_end_date
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product/purchasable-product:
    get:
      summary: ''
      operationId: getApiAdminProductPurchasableProduct
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/admin/product/simple-product:
    get:
      summary: ''
      operationId: getApiAdminProductSimpleProduct
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/admin/product/variation/{product_id}':
    get:
      summary: ''
      operationId: getApiAdminProductVariationProduct_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 7
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/tree':
    get:
      summary: ''
      operationId: getApiAdminProductVariationProduct_idTree
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/single-tree':
    get:
      summary: ''
      operationId: getApiAdminProductVariationProduct_idSingleTree
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/tree-with-selected':
    get:
      summary: ''
      operationId: getApiAdminProductVariationProduct_idTreeWithSelected
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/store':
    post:
      summary: ''
      operationId: postApiAdminProductVariationProduct_idStore
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: number
                  description: ''
                  example: 0.996
                  nullable: true
                attribute:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["ab","saepe"]'
                  nullable: false
              required:
                - attribute
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/update/{productVariation_id}':
    post:
      summary: ''
      operationId: postApiAdminProductVariationProduct_idUpdateProductVariation_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_variation_id:
                  type: number
                  description: ''
                  example: 36423.9016
                  nullable: true
                attribute:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["autem","fugit"]'
                  nullable: false
              required:
                - attribute
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/destroy/{productVariation_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminProductVariationProduct_idDestroyProductVariation_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/{product_id}/show/{productVariation_id}':
    get:
      summary: ''
      operationId: getApiAdminProductVariationProduct_idShowProductVariation_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/variation/ancestors-and-self/{productVariation_id}':
    get:
      summary: ''
      operationId: getApiAdminProductVariationAncestorsAndSelfProductVariation_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/initial-variation/{product_id}':
    get:
      summary: ''
      operationId: getApiAdminProductInitialVariationProduct_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/children-variation/{productVariation_id}':
    get:
      summary: ''
      operationId: getApiAdminProductChildrenVariationProductVariation_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/ancestors-and-self-id/{productVariation_id}':
    get:
      summary: ''
      operationId: getApiAdminProductAncestorsAndSelfIdProductVariation_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/video/{product_id}':
    get:
      summary: ''
      operationId: getApiAdminProductVideoProduct_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 24
                  nullable: false
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                video_provider:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 18
                  nullable: false
                link:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 5000 characters.'
                  example: zqgdkfxnftzkadap
                  nullable: false
              required:
                - video_provider
                - link
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/video/{product_id}/{productVideo_id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                video_provider:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 7
                  nullable: false
                link:
                  type: string
                  description: 'Must be a valid URL. Must not be greater than 5000 characters.'
                  example: ysxffndzhlof
                  nullable: false
              required:
                - video_provider
                - link
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productVideo_id
        description: 'The ID of the productVideo.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/admin/product/seo/{product_id}':
    get:
      summary: ''
      operationId: getApiAdminProductSeoProduct_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product/seo/{product_id}/update':
    post:
      summary: ''
      operationId: postApiAdminProductSeoProduct_idUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: ''
                  example: 32.710933913
                  nullable: false
                title:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: erledyxxrycwaef
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: 'Odit nisi sint doloribus.'
                  nullable: false
                meta_keyword:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: pta
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - product_id
                - title
                - description
                - meta_keyword
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/country-code:
    get:
      summary: ''
      operationId: getApiAdminCountryCode
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/admin/country-code/show/{country}':
    get:
      summary: ''
      operationId: getApiAdminCountryCodeShowCountry
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: country
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/admin/country-code/calling-code/{callingCode}':
    get:
      summary: ''
      operationId: getApiAdminCountryCodeCallingCodeCallingCode
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: callingCode
        description: ''
        example: laborum
        required: true
        schema:
          type: string
  /api/admin/country:
    get:
      summary: ''
      operationId: getApiAdminCountry
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminCountry
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: padvgxdmgaeausoafllfpsc
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 2 characters.'
                  example: cr
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 105.27259
                  nullable: false
              required:
                - name
                - code
                - status
      security: []
  '/api/admin/country/{country_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminCountryCountry_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminCountryCountry_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ydyatyskolbrkqndjcgq
                  nullable: false
                code:
                  type: string
                  description: 'Must not be greater than 2 characters.'
                  example: ui
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 23.6692
                  nullable: false
              required:
                - name
                - code
                - status
      security: []
    parameters:
      -
        in: path
        name: country_id
        description: 'The ID of the country.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/state:
    get:
      summary: ''
      operationId: getApiAdminState
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 6
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminState
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: twxjxibrkaebdnsxato
                  nullable: false
                country:
                  type: number
                  description: ''
                  example: 19.6068
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 62471014.418941
                  nullable: false
              required:
                - name
                - country
                - status
      security: []
  /api/admin/state/simple-lists:
    get:
      summary: ''
      operationId: getApiAdminStateSimpleLists
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 23
                  nullable: false
      security: []
  '/api/admin/state/{state_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminStateState_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminStateState_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: vechqfxkjzsykxamvxpm
                  nullable: false
                country:
                  type: number
                  description: ''
                  example: 4958.3
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 492450659.6991
                  nullable: false
              required:
                - name
                - country
                - status
      security: []
    parameters:
      -
        in: path
        name: state_id
        description: 'The ID of the state.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/state/states/{country}':
    get:
      summary: ''
      operationId: getApiAdminStateStatesCountry
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: country
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/city:
    get:
      summary: ''
      operationId: getApiAdminCity
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 14
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminCity
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ktfmtsuxukvjqtbnmfb
                  nullable: false
                state:
                  type: number
                  description: ''
                  example: 2557276.7047212
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 308.4384
                  nullable: false
              required:
                - name
                - state
                - status
      security: []
  '/api/admin/city/{city_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminCityCity_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdminCityCity_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: pwdkaokzvopretvszobaxp
                  nullable: false
                state:
                  type: number
                  description: ''
                  example: 16.19162
                  nullable: false
                status:
                  type: number
                  description: ''
                  example: 37.213
                  nullable: false
              required:
                - name
                - state
                - status
      security: []
    parameters:
      -
        in: path
        name: city_id
        description: 'The ID of the city.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/city/cities/{state}':
    get:
      summary: ''
      operationId: getApiAdminCityCitiesState
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: state
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/administrator:
    get:
      summary: ''
      operationId: getApiAdminAdministrator
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminAdministrator
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: yivnqapqn
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: wilfred.simonis@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'O/1i`A&F,FFBz\%+ucg'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: ctdsvgwfaxkqhxhudfrflryizddtgipttffdoexxzknudinlqjzqyiejgmeqqxelhcqiimogrxiz
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: zoavtxctiumrxqxfjfv
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 21
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: opvxvxplcvxxmpmqzfuq
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
                - status
                - country_code
      security: []
  '/api/admin/administrator/show/{administrator_id}':
    get:
      summary: ''
      operationId: getApiAdminAdministratorShowAdministrator_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/administrator/{administrator_id}':
    post:
      summary: ''
      operationId: postApiAdminAdministratorAdministrator_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: okkazmw
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: jhauck@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'dVN.R>DGA]j'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: gxrmeoik
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: anowcvolvy
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 3
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ijfdwhrvv
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
                - status
                - country_code
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminAdministratorAdministrator_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/administrator/export:
    get:
      summary: ''
      operationId: getApiAdminAdministratorExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 4
                  nullable: false
      security: []
  '/api/admin/administrator/change-password/{administrator_id}':
    post:
      summary: ''
      operationId: postApiAdminAdministratorChangePasswordAdministrator_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '3ln1$E\VhWxmPhj(Gm'''
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: bxifxhznyehwmqojwwoenxxhgblupprq
                  nullable: false
              required:
                - password
                - password_confirmation
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/administrator/change-image/{administrator_id}':
    post:
      summary: ''
      operationId: postApiAdminAdministratorChangeImageAdministrator_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/administrator/my-order/{administrator_id}':
    get:
      summary: ''
      operationId: getApiAdminAdministratorMyOrderAdministrator_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 16
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/administrator/address/{administrator_id}':
    get:
      summary: ''
      operationId: getApiAdminAdministratorAddressAdministrator_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 25
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminAdministratorAddressAdministrator_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: wbwqwlbcvlfxlrdskxv
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: thand@example.com
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: hcjuszyn
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: pnykxadylccfl
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: pklb
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ftvuqbwrge
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: wzxammlszybdeyqpj
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: saekajoyfhdpbhwhunbvsmkz
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/administrator/address/show/{administrator_id}/{address_id}':
    get:
      summary: ''
      operationId: getApiAdminAdministratorAddressShowAdministrator_idAddress_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/administrator/address/{administrator_id}/{address_id}':
    put:
      summary: ''
      operationId: putApiAdminAdministratorAddressAdministrator_idAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: xpdwihgo
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: lacey89@example.org
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: pfkxnbq
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: r
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: mtjzgzct
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: zphjyqglp
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: vvdiye
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: ockazdk
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminAdministratorAddressAdministrator_idAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: administrator_id
        description: 'The ID of the administrator.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/customer:
    get:
      summary: ''
      operationId: getApiAdminCustomer
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 22
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminCustomer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: pnnfsjxep
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: feil.toni@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'f-Yv~hlk"h[zK&23'
                  nullable: false
                username:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ouilamtglvbj
                  nullable: true
                device_token:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                web_token:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: logzjrjbeudoianfguuofddqwjsgzlzgeanvgooixjnbqbuidcdraodxhacxbwnaitvizk
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: nt
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 7
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: tjkqzwlrred
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
                - status
                - country_code
      security: []
  '/api/admin/customer/show/{customer_id}':
    get:
      summary: ''
      operationId: getApiAdminCustomerShowCustomer_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/customer/{customer_id}':
    post:
      summary: ''
      operationId: postApiAdminCustomerCustomer_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: r
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: hbruen@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'fr|Ib$0*j#cI'
                  nullable: false
                username:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: joqeaybthi
                  nullable: true
                device_token:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                web_token:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: ztacbzlzwqvyfovixunrcqxcemigfbuom
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: rs
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 21
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: mcdnujgnjojtswkizo
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
                - status
                - country_code
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminCustomerCustomer_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/customer/export:
    get:
      summary: ''
      operationId: getApiAdminCustomerExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 23
                  nullable: false
      security: []
  '/api/admin/customer/change-password/{customer_id}':
    post:
      summary: ''
      operationId: postApiAdminCustomerChangePasswordCustomer_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '\"+"4lVni5$BE5.S%'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: zsvcgfukhpm
                  nullable: false
              required:
                - password
                - password_confirmation
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/customer/change-image/{customer_id}':
    post:
      summary: ''
      operationId: postApiAdminCustomerChangeImageCustomer_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/customer/my-order/{customer_id}':
    get:
      summary: ''
      operationId: getApiAdminCustomerMyOrderCustomer_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/customer/address/{customer_id}':
    get:
      summary: ''
      operationId: getApiAdminCustomerAddressCustomer_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 9
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminCustomerAddressCustomer_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: nkgxbvlo
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: clement.towne@example.net
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: ppaagqayywp
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: egmdaescrwebdnrb
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: wacwgqfjwvqjzpdtsqiueih
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: xwixqdrdam
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: nnacintybfkoyevhbjqfnltrm
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: wwghdoubfmgeukbxvadhb
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/customer/address/show/{customer_id}/{address_id}':
    get:
      summary: ''
      operationId: getApiAdminCustomerAddressShowCustomer_idAddress_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/customer/address/{customer_id}/{address_id}':
    put:
      summary: ''
      operationId: putApiAdminCustomerAddressCustomer_idAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: kcivayebjk
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: cole72@example.org
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: ajbupcfzsxholgma
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: vvnkgphmtq
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: sdhnbykgbdyqxeharvyjog
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ulda
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: jhrjujxi
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: ondnrzyjpdtyoyrvaguzv
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminCustomerAddressCustomer_idAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: customer_id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/employee:
    get:
      summary: ''
      operationId: getApiAdminEmployee
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 8
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminEmployee
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: twa
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: stracke.donnell@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '*@Swi\CF|'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: weflqj
                  nullable: false
                username:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: lngwztjq
                  nullable: true
                device_token:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                web_token:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: etwuvcdvpogwacyd
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 24
                  nullable: false
                role_id:
                  type: number
                  description: ''
                  example: 65680.776
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gcngwjvmcr
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
                - status
                - role_id
                - country_code
      security: []
  '/api/admin/employee/show/{employee_id}':
    get:
      summary: ''
      operationId: getApiAdminEmployeeShowEmployee_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/employee/{employee_id}':
    put:
      summary: ''
      operationId: putApiAdminEmployeeEmployee_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: vfxmemmwvsoqybccwgeilfv
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 190 characters.'
                  example: kwyman@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '_hl#X?Q~^0PZxhx>U;'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: kqcikqefvlqupuuym
                  nullable: false
                username:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: qpxdhtedf
                  nullable: true
                device_token:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
                web_token:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: true
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: mjighbahyejkfqdf
                  nullable: true
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 21
                  nullable: false
                role_id:
                  type: number
                  description: ''
                  example: 17.62848883
                  nullable: false
                country_code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: pmj
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
                - status
                - role_id
                - country_code
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminEmployeeEmployee_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/employee/export:
    get:
      summary: ''
      operationId: getApiAdminEmployeeExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 4
                  nullable: false
      security: []
  '/api/admin/employee/change-password/{employee_id}':
    post:
      summary: ''
      operationId: postApiAdminEmployeeChangePasswordEmployee_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'xuE^jeO%&vzaP|&+'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: nzhbkeicexhlkmmbmsphnooeqbxyllngizuugrwrhjryohdvzgedbbqekjuowngi
                  nullable: false
              required:
                - password
                - password_confirmation
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/employee/change-image/{employee_id}':
    post:
      summary: ''
      operationId: postApiAdminEmployeeChangeImageEmployee_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/employee/my-order/{employee_id}':
    get:
      summary: ''
      operationId: getApiAdminEmployeeMyOrderEmployee_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 14
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/employee/address/{employee_id}':
    get:
      summary: ''
      operationId: getApiAdminEmployeeAddressEmployee_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 9
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminEmployeeAddressEmployee_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: xrgjsdefzlzhoiazntfnqxih
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: turcotte.lauryn@example.org
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: lrvcjkcvpdwozisexzkwf
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: by
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: zdbxldznrwjcjasbijgmsr
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: cutypkqxjiiqzizrxydlhxr
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: owhynjwyfmigsbl
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: titslwb
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/employee/address/show/{employee_id}/{address_id}':
    get:
      summary: ''
      operationId: getApiAdminEmployeeAddressShowEmployee_idAddress_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/employee/address/{employee_id}/{address_id}':
    put:
      summary: ''
      operationId: putApiAdminEmployeeAddressEmployee_idAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: oydcwawroqkbxuhxqdqmwyh
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: abagail57@example.com
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: vwvekxbjjhfmqxooqvorm
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: qzicl
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: dfjynpqpvookgcvjepoidi
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: sx
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: bmtfpz
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: eyia
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminEmployeeAddressEmployee_idAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/my-order/show/{user_id}/{order_id}':
    get:
      summary: ''
      operationId: getApiAdminMyOrderShowUser_idOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/promotion:
    get:
      summary: ''
      operationId: getApiAdminPromotion
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 9
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminPromotion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: poceg
                  nullable: false
                type:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 22
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 13
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - name
                - type
                - status
                - image
      security: []
  '/api/admin/promotion/show/{promotion_id}':
    get:
      summary: ''
      operationId: getApiAdminPromotionShowPromotion_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: promotion_id
        description: 'The ID of the promotion.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/promotion/{promotion_id}':
    post:
      summary: ''
      operationId: postApiAdminPromotionPromotion_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ovaqbvhmkkez
                  nullable: false
                type:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 3
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 22
                  nullable: false
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - name
                - type
                - status
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminPromotionPromotion_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: promotion_id
        description: 'The ID of the promotion.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/promotion/export:
    get:
      summary: ''
      operationId: getApiAdminPromotionExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 7
                  nullable: false
      security: []
  '/api/admin/promotion/change-image/{promotion_id}':
    post:
      summary: ''
      operationId: postApiAdminPromotionChangeImagePromotion_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    parameters:
      -
        in: path
        name: promotion_id
        description: 'The ID of the promotion.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/promotion/product/{promotion_id}':
    get:
      summary: ''
      operationId: getApiAdminPromotionProductPromotion_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminPromotionProductPromotion_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: ''
                  example: 0.569994515
                  nullable: false
              required:
                - product_id
      security: []
    parameters:
      -
        in: path
        name: promotion_id
        description: 'The ID of the promotion.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/promotion/product/{promotion_id}/{promotionProduct_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminPromotionProductPromotion_idPromotionProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: promotion_id
        description: 'The ID of the promotion.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: promotionProduct_id
        description: 'The ID of the promotionProduct.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-section:
    get:
      summary: ''
      operationId: getApiAdminProductSection
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 24
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminProductSection
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: nivjngfkdvxgzzppwq
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 18
                  nullable: false
              required:
                - name
                - status
      security: []
  '/api/admin/product-section/show/{productSection_id}':
    get:
      summary: ''
      operationId: getApiAdminProductSectionShowProductSection_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productSection_id
        description: 'The ID of the productSection.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product-section/{productSection_id}':
    post:
      summary: ''
      operationId: postApiAdminProductSectionProductSection_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: norexrjrrywjswyibvmphcm
                  nullable: false
                status:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 23
                  nullable: false
              required:
                - name
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminProductSectionProductSection_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productSection_id
        description: 'The ID of the productSection.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/product-section/export:
    get:
      summary: ''
      operationId: getApiAdminProductSectionExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
  '/api/admin/product-section/product/{productSection_id}':
    get:
      summary: ''
      operationId: getApiAdminProductSectionProductProductSection_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminProductSectionProductProductSection_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: ''
                  example: 5846.0
                  nullable: false
              required:
                - product_id
      security: []
    parameters:
      -
        in: path
        name: productSection_id
        description: 'The ID of the productSection.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/product-section/product/{productSection_id}/{productSectionProduct_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminProductSectionProductProductSection_idProductSectionProduct_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productSection_id
        description: 'The ID of the productSection.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: productSectionProduct_id
        description: 'The ID of the productSectionProduct.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/transaction:
    get:
      summary: ''
      operationId: getApiAdminTransaction
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 8
                  nullable: false
      security: []
  /api/admin/transaction/export:
    get:
      summary: ''
      operationId: getApiAdminTransactionExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 20
                  nullable: false
      security: []
  /api/admin/sales-report:
    get:
      summary: ''
      operationId: getApiAdminSalesReport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 7
                  nullable: false
      security: []
  /api/admin/sales-report/export:
    get:
      summary: ''
      operationId: getApiAdminSalesReportExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 11
                  nullable: false
      security: []
  /api/admin/credit-balance-report:
    get:
      summary: ''
      operationId: getApiAdminCreditBalanceReport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 11
                  nullable: false
      security: []
  /api/admin/credit-balance-report/export:
    get:
      summary: ''
      operationId: getApiAdminCreditBalanceReportExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 22
                  nullable: false
      security: []
  /api/admin/push-notification:
    get:
      summary: ''
      operationId: getApiAdminPushNotification
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminPushNotification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dxzcwlis
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 2000 characters.'
                  example: 'Dolor delectus cum ab pariatur reiciendis tenetur.'
                  nullable: false
                role_id:
                  type: number
                  description: ''
                  example: 3604.479
                  nullable: true
                user_id:
                  type: number
                  description: ''
                  example: 108909231.78445
                  nullable: true
                image:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: false
              required:
                - title
                - description
      security: []
  '/api/admin/push-notification/show/{pushNotification_id}':
    get:
      summary: ''
      operationId: getApiAdminPushNotificationShowPushNotification_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: pushNotification_id
        description: 'The ID of the pushNotification.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/push-notification/{pushNotification_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminPushNotificationPushNotification_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: pushNotification_id
        description: 'The ID of the pushNotification.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/push-notification/export:
    get:
      summary: ''
      operationId: getApiAdminPushNotificationExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 22
                  nullable: false
      security: []
  /api/admin/users:
    get:
      summary: ''
      operationId: getApiAdminUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 22
                  nullable: false
      security: []
  /api/admin/coupon:
    get:
      summary: ''
      operationId: getApiAdminCoupon
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 22
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminCoupon
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: gkczji
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Nesciunt non ut quaerat et cupiditate perspiciatis dolorem autem.'
                  nullable: true
                code:
                  type: string
                  description: 'Must not be greater than 24 characters.'
                  example: txqbymvftog
                  nullable: false
                discount:
                  type: number
                  description: ''
                  example: 5.734
                  nullable: false
                discount_type:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 14
                  nullable: false
                start_date:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                end_date:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                minimum_order:
                  type: number
                  description: ''
                  example: 3252610.6266675
                  nullable: false
                maximum_discount:
                  type: number
                  description: ''
                  example: 4523.05
                  nullable: false
                limit_per_user:
                  type: number
                  description: ''
                  example: 289.37517372
                  nullable: true
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - name
                - code
                - discount
                - discount_type
                - start_date
                - end_date
                - minimum_order
                - maximum_discount
                - image
      security: []
  '/api/admin/coupon/show/{coupon_id}':
    get:
      summary: ''
      operationId: getApiAdminCouponShowCoupon_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: coupon_id
        description: 'The ID of the coupon.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/coupon/{coupon_id}':
    post:
      summary: ''
      operationId: postApiAdminCouponCoupon_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: brnelmmwaimegyeh
                  nullable: false
                description:
                  type: string
                  description: 'Must not be greater than 900 characters.'
                  example: 'Eum aperiam aliquid doloribus tenetur sit aut.'
                  nullable: true
                code:
                  type: string
                  description: 'Must not be greater than 24 characters.'
                  example: meahfe
                  nullable: false
                discount:
                  type: number
                  description: ''
                  example: 895519.0
                  nullable: false
                discount_type:
                  type: number
                  description: 'Must not be greater than 24.'
                  example: 24
                  nullable: false
                start_date:
                  type: string
                  description: ''
                  example: possimus
                  nullable: false
                end_date:
                  type: string
                  description: ''
                  example: alias
                  nullable: false
                minimum_order:
                  type: number
                  description: ''
                  example: 15.804
                  nullable: false
                maximum_discount:
                  type: number
                  description: ''
                  example: 0.0
                  nullable: false
                limit_per_user:
                  type: number
                  description: ''
                  example: 365032.45269036
                  nullable: true
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - name
                - code
                - discount
                - discount_type
                - start_date
                - end_date
                - minimum_order
                - maximum_discount
                - image
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminCouponCoupon_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: coupon_id
        description: 'The ID of the coupon.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/coupon/export:
    get:
      summary: ''
      operationId: getApiAdminCouponExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
  /api/admin/purchase:
    get:
      summary: ''
      operationId: getApiAdminPurchase
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 24
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminPurchase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                supplier_id:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: amet
                  nullable: false
                date:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: false
                status:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: accusantium
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 3632.41709467
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                note:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: xxpc
                  nullable: true
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["corporis","dolore"]'
                  nullable: false
              required:
                - supplier_id
                - date
                - status
                - total
                - products
      security: []
  '/api/admin/purchase/show/{purchase_id}':
    get:
      summary: ''
      operationId: getApiAdminPurchaseShowPurchase_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/purchase/edit/{purchase_id}':
    get:
      summary: ''
      operationId: getApiAdminPurchaseEditPurchase_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/purchase/update/{purchase_id}':
    post:
      summary: ''
      operationId: postApiAdminPurchaseUpdatePurchase_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                supplier_id:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: qui
                  nullable: false
                date:
                  type: string
                  description: ''
                  example: facilis
                  nullable: false
                status:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: est
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 14460.087599003
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                note:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: hosflizoxvzfyctff
                  nullable: true
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["et","debitis"]'
                  nullable: false
              required:
                - supplier_id
                - date
                - status
                - total
                - products
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/purchase/{purchase_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminPurchasePurchase_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/purchase/export:
    get:
      summary: ''
      operationId: getApiAdminPurchaseExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 3
                  nullable: false
      security: []
  '/api/admin/purchase/download-attachment/{purchase_id}':
    get:
      summary: ''
      operationId: getApiAdminPurchaseDownloadAttachmentPurchase_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/purchase/payment/{purchase_id}':
    get:
      summary: ''
      operationId: getApiAdminPurchasePaymentPurchase_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAdminPurchasePaymentPurchase_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                purchase_id:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: aperiam
                  nullable: false
                date:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: false
                reference_no:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                amount:
                  type: number
                  description: ''
                  example: 7.0
                  nullable: false
                payment_method:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: quisquam
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - purchase_id
                - date
                - amount
                - payment_method
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/purchase/payment/download-attachment/{purchasePayment_id}':
    get:
      summary: ''
      operationId: getApiAdminPurchasePaymentDownloadAttachmentPurchasePayment_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: purchasePayment_id
        description: 'The ID of the purchasePayment.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/purchase/payment/{purchase_id}/{purchasePayment_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminPurchasePaymentPurchase_idPurchasePayment_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: purchase_id
        description: 'The ID of the purchase.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: purchasePayment_id
        description: 'The ID of the purchasePayment.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/stock:
    get:
      summary: ''
      operationId: getApiAdminStock
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
  /api/admin/stock/export:
    get:
      summary: ''
      operationId: getApiAdminStockExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 3
                  nullable: false
      security: []
  /api/admin/return-order:
    get:
      summary: ''
      operationId: getApiAdminReturnOrder
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 9
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminReturnOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: at
                  nullable: false
                subtotal:
                  type: number
                  description: ''
                  example: 54830.70113502
                  nullable: false
                date:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 19825383.19308
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                reason:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: x
                  nullable: true
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["est","voluptatem"]'
                  nullable: false
              required:
                - user_id
                - subtotal
                - date
                - total
                - products
      security: []
  '/api/admin/return-order/show/{returnOrder_id}':
    get:
      summary: ''
      operationId: getApiAdminReturnOrderShowReturnOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnOrder_id
        description: 'The ID of the returnOrder.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/return-order/edit/{returnOrder_id}':
    get:
      summary: ''
      operationId: getApiAdminReturnOrderEditReturnOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnOrder_id
        description: 'The ID of the returnOrder.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/return-order/update/{returnOrder_id}':
    post:
      summary: ''
      operationId: postApiAdminReturnOrderUpdateReturnOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'Must not be one of <code>0</code>  Must not be one of <code>null</code>.'
                  example: quia
                  nullable: false
                subtotal:
                  type: number
                  description: ''
                  example: 55.9
                  nullable: false
                date:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 571530911.03763
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                reason:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: qzpwqdtgyjujbrjqnrjnrusfu
                  nullable: true
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["fuga","quo"]'
                  nullable: false
              required:
                - user_id
                - subtotal
                - date
                - total
                - products
      security: []
    parameters:
      -
        in: path
        name: returnOrder_id
        description: 'The ID of the returnOrder.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/return-order/{returnOrder_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminReturnOrderReturnOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnOrder_id
        description: 'The ID of the returnOrder.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/return-order/export:
    get:
      summary: ''
      operationId: getApiAdminReturnOrderExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 5
                  nullable: false
      security: []
  '/api/admin/return-order/download-attachment/{returnOrder_id}':
    get:
      summary: ''
      operationId: getApiAdminReturnOrderDownloadAttachmentReturnOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnOrder_id
        description: 'The ID of the returnOrder.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/damage:
    get:
      summary: ''
      operationId: getApiAdminDamage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 23
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiAdminDamage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                date:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                subtotal:
                  type: number
                  description: ''
                  example: 5055.66
                  nullable: false
                discount:
                  type: number
                  description: ''
                  example: 1952449.03408
                  nullable: true
                tax:
                  type: number
                  description: ''
                  example: 2342.93106137
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 42.47
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                note:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: dowqlhbsaoiswiup
                  nullable: true
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["reprehenderit","minus"]'
                  nullable: false
              required:
                - date
                - subtotal
                - tax
                - total
                - products
      security: []
  '/api/admin/damage/show/{damage_id}':
    get:
      summary: ''
      operationId: getApiAdminDamageShowDamage_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: damage_id
        description: 'The ID of the damage.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/damage/edit/{damage_id}':
    get:
      summary: ''
      operationId: getApiAdminDamageEditDamage_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: damage_id
        description: 'The ID of the damage.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/damage/update/{damage_id}':
    post:
      summary: ''
      operationId: postApiAdminDamageUpdateDamage_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                date:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: false
                subtotal:
                  type: number
                  description: ''
                  example: 5126498.0320471
                  nullable: false
                discount:
                  type: number
                  description: ''
                  example: 11354.3936
                  nullable: true
                tax:
                  type: number
                  description: ''
                  example: 770.14007
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 37.237533
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 2048 kilobytes.'
                  nullable: true
                note:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: xxfvhxvbkxag
                  nullable: true
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["doloribus","rerum"]'
                  nullable: false
              required:
                - date
                - subtotal
                - tax
                - total
                - products
      security: []
    parameters:
      -
        in: path
        name: damage_id
        description: 'The ID of the damage.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/damage/{damage_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminDamageDamage_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: damage_id
        description: 'The ID of the damage.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/damage/export:
    get:
      summary: ''
      operationId: getApiAdminDamageExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 24
                  nullable: false
      security: []
  '/api/admin/damage/download-attachment/{damage_id}':
    get:
      summary: ''
      operationId: getApiAdminDamageDownloadAttachmentDamage_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: damage_id
        description: 'The ID of the damage.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/online-order:
    get:
      summary: ''
      operationId: getApiAdminOnlineOrder
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 11
                  nullable: false
      security: []
  '/api/admin/online-order/show/{order_id}':
    get:
      summary: ''
      operationId: getApiAdminOnlineOrderShowOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/online-order/export:
    get:
      summary: ''
      operationId: getApiAdminOnlineOrderExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 6
                  nullable: false
      security: []
  '/api/admin/online-order/change-status/{order_id}':
    post:
      summary: ''
      operationId: postApiAdminOnlineOrderChangeStatusOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: ''
                  example: 154849.35
                  nullable: false
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/online-order/change-payment-status/{order_id}':
    post:
      summary: ''
      operationId: postApiAdminOnlineOrderChangePaymentStatusOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_status:
                  type: number
                  description: ''
                  example: 2857376.589181
                  nullable: false
              required:
                - payment_status
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/products-report:
    get:
      summary: ''
      operationId: getApiAdminProductsReport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
  /api/admin/products-report/export:
    get:
      summary: ''
      operationId: getApiAdminProductsReportExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 25
                  nullable: false
      security: []
  /api/admin/pos-order:
    get:
      summary: ''
      operationId: getApiAdminPosOrder
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 24
                  nullable: false
      security: []
  '/api/admin/pos-order/show/{order_id}':
    get:
      summary: ''
      operationId: getApiAdminPosOrderShowOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/pos-order/{order_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminPosOrderOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/pos-order/export:
    get:
      summary: ''
      operationId: getApiAdminPosOrderExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 6
                  nullable: false
      security: []
  '/api/admin/pos-order/change-status/{order_id}':
    post:
      summary: ''
      operationId: postApiAdminPosOrderChangeStatusOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: ''
                  example: 2613328.9411155
                  nullable: false
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/pos-order/change-payment-status/{order_id}':
    post:
      summary: ''
      operationId: postApiAdminPosOrderChangePaymentStatusOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_status:
                  type: number
                  description: ''
                  example: 29.29959
                  nullable: false
              required:
                - payment_status
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/pos:
    post:
      summary: ''
      operationId: postApiAdminPos
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: number
                  description: ''
                  example: 2225090.02591
                  nullable: false
                subtotal:
                  type: number
                  description: ''
                  example: 269422.075241
                  nullable: false
                discount:
                  type: number
                  description: ''
                  example: 126075.29376
                  nullable: true
                tax:
                  type: number
                  description: ''
                  example: 5810.1906519
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 146864895.32086
                  nullable: false
                order_type:
                  type: number
                  description: ''
                  example: 6.8377
                  nullable: false
                source:
                  type: number
                  description: ''
                  example: 349475.90346591
                  nullable: false
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["at","quo"]'
                  nullable: false
              required:
                - customer_id
                - subtotal
                - tax
                - total
                - order_type
                - source
                - products
      security: []
  /api/admin/return-and-refund:
    get:
      summary: ''
      operationId: getApiAdminReturnAndRefund
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
  '/api/admin/return-and-refund/show/{returnAndRefund_id}':
    get:
      summary: ''
      operationId: getApiAdminReturnAndRefundShowReturnAndRefund_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnAndRefund_id
        description: 'The ID of the returnAndRefund.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/admin/return-and-refund/change-status/{returnAndRefund_id}':
    post:
      summary: ''
      operationId: postApiAdminReturnAndRefundChangeStatusReturnAndRefund_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: ''
                  example: 5348874.881
                  nullable: false
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: returnAndRefund_id
        description: 'The ID of the returnAndRefund.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/return-and-refund/export:
    get:
      summary: ''
      operationId: getApiAdminReturnAndRefundExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
  /api/admin/subscriber:
    get:
      summary: ''
      operationId: getApiAdminSubscriber
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 8
                  nullable: false
      security: []
  '/api/admin/subscriber/{subscriber_id}':
    delete:
      summary: ''
      operationId: deleteApiAdminSubscriberSubscriber_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: subscriber_id
        description: 'The ID of the subscriber.'
        example: 1
        required: true
        schema:
          type: integer
  /api/admin/subscriber/export:
    get:
      summary: ''
      operationId: getApiAdminSubscriberExport
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 3
                  nullable: false
      security: []
  /api/admin/subscriber/send-email:
    post:
      summary: ''
      operationId: postApiAdminSubscriberSendEmail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: od
                  nullable: false
                message:
                  type: string
                  description: 'Must not be greater than 2500 characters.'
                  example: ehxaoyuq
                  nullable: false
              required:
                - subject
                - message
      security: []
  /api/frontend/setting:
    get:
      summary: ''
      operationId: getApiFrontendSetting
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
  /api/frontend/country-code:
    get:
      summary: ''
      operationId: getApiFrontendCountryCode
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
  '/api/frontend/country-code/show/{country}':
    get:
      summary: ''
      operationId: getApiFrontendCountryCodeShowCountry
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: country
        description: ''
        example: odit
        required: true
        schema:
          type: string
  '/api/frontend/country-code/calling-code/{callingCode}':
    get:
      summary: ''
      operationId: getApiFrontendCountryCodeCallingCodeCallingCode
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: callingCode
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  /api/frontend/address:
    get:
      summary: ''
      operationId: getApiFrontendAddress
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 23
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiFrontendAddress
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: gglzpxgtvfbuhkzlt
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: agutkowski@example.com
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: idmcxnbuney
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: rwgabe
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: vzfglaloin
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: akgjkneasbslgoz
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: jidxpfpplk
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: kvntkcgicmlvul
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
  '/api/frontend/address/show/{address_id}':
    get:
      summary: ''
      operationId: getApiFrontendAddressShowAddress_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/address/{address_id}':
    put:
      summary: ''
      operationId: putApiFrontendAddressAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: hxgssieephfo
                  nullable: false
                email:
                  type: string
                  description: 'Must not be greater than 190 characters.'
                  example: ferry.princess@example.net
                  nullable: true
                country_code:
                  type: string
                  description: 'Must not be greater than 28 characters.'
                  example: dzzrzsabectcqxoqwyvfum
                  nullable: false
                phone:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: djvfao
                  nullable: false
                country:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: amlprsazhbmscdcfdf
                  nullable: false
                state:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: mxoquduwqzoy
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: xwq
                  nullable: true
                zip_code:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                address:
                  type: string
                  description: 'Must not be greater than 500 characters.'
                  example: du
                  nullable: false
              required:
                - full_name
                - country_code
                - phone
                - country
                - address
      security: []
    delete:
      summary: ''
      operationId: deleteApiFrontendAddressAddress_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: address_id
        description: 'The ID of the address.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/language:
    get:
      summary: ''
      operationId: getApiFrontendLanguage
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
  '/api/frontend/language/show/{language_id}':
    get:
      summary: ''
      operationId: getApiFrontendLanguageShowLanguage_id
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: language_id
        description: 'The ID of the language.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/slider:
    get:
      summary: ''
      operationId: getApiFrontendSlider
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
  /api/frontend/product-category:
    get:
      summary: ''
      operationId: getApiFrontendProductCategory
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 8
                  nullable: false
      security: []
  '/api/frontend/product-category/ancestors-and-self/{productCategory_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductCategoryAncestorsAndSelfProductCategory_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productCategory_slug
        description: 'The slug of the productCategory.'
        example: ea
        required: true
        schema:
          type: string
  /api/frontend/product-category/tree:
    get:
      summary: ''
      operationId: getApiFrontendProductCategoryTree
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
  '/api/frontend/product-category/show/{productCategory_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductCategoryShowProductCategory_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productCategory_slug
        description: 'The slug of the productCategory.'
        example: dolor
        required: true
        schema:
          type: string
  /api/frontend/product:
    get:
      summary: ''
      operationId: getApiFrontendProduct
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 6
                  nullable: false
      security: []
  '/api/frontend/product/show/{product_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductShowProduct_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: unde
        required: true
        schema:
          type: string
  /api/frontend/product/popular-products:
    get:
      summary: ''
      operationId: getApiFrontendProductPopularProducts
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 15
                  nullable: false
      security: []
  /api/frontend/product/flash-sale-products:
    get:
      summary: ''
      operationId: getApiFrontendProductFlashSaleProducts
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 19
                  nullable: false
      security: []
  /api/frontend/product/category-wise-products:
    post:
      summary: ''
      operationId: postApiFrontendProductCategoryWiseProducts
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/frontend/product/offer-products:
    get:
      summary: ''
      operationId: getApiFrontendProductOfferProducts
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
  /api/frontend/product/wishlist-products:
    get:
      summary: ''
      operationId: getApiFrontendProductWishlistProducts
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
  '/api/frontend/product/related-products/{product_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductRelatedProductsProduct_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 25
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: esse
        required: true
        schema:
          type: string
  '/api/frontend/product/initial-variation/{product_id}':
    get:
      summary: ''
      operationId: getApiFrontendProductInitialVariationProduct_id
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/product/children-variation/{productVariation_id}':
    get:
      summary: ''
      operationId: getApiFrontendProductChildrenVariationProductVariation_id
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/product/variation/ancestors-and-self/{productVariation_id}':
    get:
      summary: ''
      operationId: getApiFrontendProductVariationAncestorsAndSelfProductVariation_id
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productVariation_id
        description: 'The ID of the productVariation.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/product/all-variation/{product_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductAllVariationProduct_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: odio
        required: true
        schema:
          type: string
  '/api/frontend/product/show-with-trashed/{product_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductShowWithTrashedProduct_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: product_slug
        description: 'The slug of the product.'
        example: labore
        required: true
        schema:
          type: string
  /api/frontend/page:
    get:
      summary: ''
      operationId: getApiFrontendPage
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 1
                  nullable: false
      security: []
  '/api/frontend/page/show/{page_slug}':
    get:
      summary: ''
      operationId: getApiFrontendPageShowPage_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: page_slug
        description: 'The slug of the page.'
        example: assumenda
        required: true
        schema:
          type: string
  '/api/frontend/page/page-info/{page_id}':
    get:
      summary: ''
      operationId: getApiFrontendPagePageInfoPage_id
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: page_id
        description: 'The ID of the page.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/promotion:
    get:
      summary: ''
      operationId: getApiFrontendPromotion
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 12
                  nullable: false
      security: []
  '/api/frontend/promotion/show/{promotion_slug}':
    get:
      summary: ''
      operationId: getApiFrontendPromotionShowPromotion_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: promotion_slug
        description: 'The slug of the promotion.'
        example: qui
        required: true
        schema:
          type: string
  '/api/frontend/promotion/products/{promotion_slug}':
    get:
      summary: ''
      operationId: getApiFrontendPromotionProductsPromotion_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 4
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: promotion_slug
        description: 'The slug of the promotion.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/product-section:
    get:
      summary: ''
      operationId: getApiFrontendProductSection
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 19
                  nullable: false
      security: []
  '/api/frontend/product-section/show/{productSection_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductSectionShowProductSection_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productSection_slug
        description: 'The slug of the productSection.'
        example: quos
        required: true
        schema:
          type: string
  '/api/frontend/product-section/products/{productSection_slug}':
    get:
      summary: ''
      operationId: getApiFrontendProductSectionProductsProductSection_slug
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No query results for model.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No query results for model.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 14
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: productSection_slug
        description: 'The slug of the productSection.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/product-brand:
    get:
      summary: ''
      operationId: getApiFrontendProductBrand
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 11
                  nullable: false
      security: []
  /api/frontend/benefit:
    get:
      summary: ''
      operationId: getApiFrontendBenefit
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
  /api/frontend/wishlist:
    get:
      summary: ''
      operationId: getApiFrontendWishlist
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 1
                  nullable: false
      security: []
  /api/frontend/wishlist/toggle:
    post:
      summary: ''
      operationId: postApiFrontendWishlistToggle
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: ''
                  example: 1396314.2239983
                  nullable: false
                toggle:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - product_id
                - toggle
      security: []
  /api/frontend/coupon:
    get:
      summary: ''
      operationId: getApiFrontendCoupon
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
  /api/frontend/coupon/coupon-checking:
    post:
      summary: ''
      operationId: postApiFrontendCouponCouponChecking
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: fvqfqjfmxsp
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 919.96952165
                  nullable: false
              required:
                - code
                - total
      security: []
  /api/frontend/payment-gateway:
    get:
      summary: ''
      operationId: getApiFrontendPaymentGateway
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 1
                  nullable: false
      security: []
  /api/frontend/order-area:
    get:
      summary: ''
      operationId: getApiFrontendOrderArea
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 10
                  nullable: false
      security: []
  /api/frontend/order:
    get:
      summary: ''
      operationId: getApiFrontendOrder
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 18
                  nullable: false
      security: []
    post:
      summary: ''
      operationId: postApiFrontendOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subtotal:
                  type: number
                  description: ''
                  example: 19089.68634
                  nullable: false
                discount:
                  type: number
                  description: ''
                  example: 6623358.18084
                  nullable: true
                shipping_charge:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                tax:
                  type: number
                  description: ''
                  example: 64358722.575556
                  nullable: false
                total:
                  type: number
                  description: ''
                  example: 1861962.8733
                  nullable: false
                order_type:
                  type: number
                  description: ''
                  example: 380.7
                  nullable: false
                shipping_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                billing_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                outlet_id:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                coupon_id:
                  type: number
                  description: ''
                  example: 2.13431366
                  nullable: true
                source:
                  type: number
                  description: ''
                  example: 78979878.0
                  nullable: false
                payment_method:
                  type: number
                  description: ''
                  example: 71697501.13623
                  nullable: false
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["quia","eum"]'
                  nullable: false
              required:
                - subtotal
                - tax
                - total
                - order_type
                - source
                - payment_method
                - products
      security: []
  '/api/frontend/order/show/{frontendOrder_id}':
    get:
      summary: ''
      operationId: getApiFrontendOrderShowFrontendOrder_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: frontendOrder_id
        description: 'The ID of the frontendOrder.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/order/change-status/{frontendOrder_id}':
    post:
      summary: ''
      operationId: postApiFrontendOrderChangeStatusFrontendOrder_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: number
                  description: ''
                  example: 935.345196
                  nullable: false
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: frontendOrder_id
        description: 'The ID of the frontendOrder.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/device-token/web:
    post:
      summary: ''
      operationId: postApiFrontendDeviceTokenWeb
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: false
              required:
                - token
      security: []
  /api/frontend/device-token/mobile:
    post:
      summary: ''
      operationId: postApiFrontendDeviceTokenMobile
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: false
              required:
                - token
      security: []
  /api/frontend/subscriber:
    post:
      summary: ''
      operationId: postApiFrontendSubscriber
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 100 characters.'
                  example: deckow.bernadette@example.org
                  nullable: false
              required:
                - email
      security: []
  /api/frontend/return-reason:
    get:
      summary: ''
      operationId: getApiFrontendReturnReason
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 6
                  nullable: false
      security: []
  /api/frontend/return-order:
    get:
      summary: ''
      operationId: getApiFrontendReturnOrder
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 13
                  nullable: false
      security: []
  '/api/frontend/return-order/request/{order}':
    post:
      summary: ''
      operationId: postApiFrontendReturnOrderRequestOrder
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                return_reason_id:
                  type: number
                  description: ''
                  example: 1672.568
                  nullable: false
                note:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: cvvr
                  nullable: true
                order_id:
                  type: number
                  description: ''
                  example: 39.0
                  nullable: false
                order_serial_no:
                  type: string
                  description: ''
                  example: amet
                  nullable: false
                products:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["eos","culpa"]'
                  nullable: false
                'image[]':
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - return_reason_id
                - order_id
                - order_serial_no
                - products
      security: []
    parameters:
      -
        in: path
        name: order
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/frontend/return-order/show/{returnAndRefund_id}':
    get:
      summary: ''
      operationId: getApiFrontendReturnOrderShowReturnAndRefund_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: returnAndRefund_id
        description: 'The ID of the returnAndRefund.'
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/overview/total-orders:
    get:
      summary: ''
      operationId: getApiFrontendOverviewTotalOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/frontend/overview/total-complete-orders:
    get:
      summary: ''
      operationId: getApiFrontendOverviewTotalCompleteOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/frontend/overview/total-return-orders:
    get:
      summary: ''
      operationId: getApiFrontendOverviewTotalReturnOrders
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/frontend/overview/wallet-balance:
    get:
      summary: ''
      operationId: getApiFrontendOverviewWalletBalance
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/frontend/product-review:
    post:
      summary: ''
      operationId: postApiFrontendProductReview
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: ''
                  example: 22875.7
                  nullable: false
                star:
                  type: number
                  description: ''
                  example: 424746.0094307
                  nullable: false
                review:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: qmewlxfbbydbwci
                  nullable: false
                'images[]':
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - product_id
                - star
                - review
      security: []
  '/api/frontend/product-review/show/{productReview_id}':
    get:
      summary: ''
      operationId: getApiFrontendProductReviewShowProductReview_id
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productReview_id
        description: 'The ID of the productReview.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/product-review/{productReview_id}':
    post:
      summary: ''
      operationId: postApiFrontendProductReviewProductReview_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: ''
                  example: 476.606554
                  nullable: false
                star:
                  type: number
                  description: ''
                  example: 694008.08889416
                  nullable: false
                review:
                  type: string
                  description: 'Must not be greater than 5000 characters.'
                  example: vakptsalwqk
                  nullable: false
                'images[]':
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: true
              required:
                - product_id
                - star
                - review
      security: []
    parameters:
      -
        in: path
        name: productReview_id
        description: 'The ID of the productReview.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/product-review/upload-image/{productReview_id}':
    post:
      summary: ''
      operationId: postApiFrontendProductReviewUploadImageProductReview_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                  nullable: false
              required:
                - image
      security: []
    parameters:
      -
        in: path
        name: productReview_id
        description: 'The ID of the productReview.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/product-review/delete-image/{productReview_id}/{index}':
    get:
      summary: ''
      operationId: getApiFrontendProductReviewDeleteImageProductReview_idIndex
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: productReview_id
        description: 'The ID of the productReview.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: index
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  /api/frontend/cookies:
    get:
      summary: ''
      operationId: getApiFrontendCookies
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiFrontendCookies
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cookies_notification:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - cookies_notification
      security: []
  /api/frontend/country-state-city/countries:
    get:
      summary: ''
      operationId: getApiFrontendCountryStateCityCountries
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
  '/api/frontend/country-state-city/states/{country}':
    get:
      summary: ''
      operationId: getApiFrontendCountryStateCityStatesCountry
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: country
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/frontend/country-state-city/cities/{state}':
    get:
      summary: ''
      operationId: getApiFrontendCountryStateCityCitiesState
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: state
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/frontend/outlet:
    get:
      summary: ''
      operationId: getApiFrontendOutlet
      description: ''
      parameters: []
      responses:
        400:
          description: ''
          content:
            application/json:
              schema:
                type: string
                example: 'Invalid Api Key.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 1000.'
                  example: 4
                  nullable: false
      security: []
tags:
  -
    name: Endpoints
    description: ''
